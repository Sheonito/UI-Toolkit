@startuml
class UnityBindingExtensions <<static>> {
    + {static} BindTo(source:IUniTaskAsyncEnumerable<string>, text:UnityEngine.UI.Text, rebindOnError:bool) : void
    + {static} BindTo(source:IUniTaskAsyncEnumerable<string>, text:UnityEngine.UI.Text, cancellationToken:CancellationToken, rebindOnError:bool) : void
    + {static} BindTo(source:IUniTaskAsyncEnumerable<T>, text:UnityEngine.UI.Text, rebindOnError:bool) : void
    + {static} BindTo(source:IUniTaskAsyncEnumerable<T>, text:UnityEngine.UI.Text, cancellationToken:CancellationToken, rebindOnError:bool) : void
    + {static} BindTo(source:AsyncReactiveProperty<T>, text:UnityEngine.UI.Text, rebindOnError:bool) : void
    + {static} BindTo(source:IUniTaskAsyncEnumerable<bool>, selectable:Selectable, rebindOnError:bool) : void
    + {static} BindTo(source:IUniTaskAsyncEnumerable<bool>, selectable:Selectable, cancellationToken:CancellationToken, rebindOnError:bool) : void
    + {static} BindTo(source:IUniTaskAsyncEnumerable<TSource>, monoBehaviour:TObject, bindAction:Action<TObject, TSource>, rebindOnError:bool) : void
    + {static} BindTo(source:IUniTaskAsyncEnumerable<TSource>, bindTarget:TObject, bindAction:Action<TObject, TSource>, cancellationToken:CancellationToken, rebindOnError:bool) : void
}
@enduml
