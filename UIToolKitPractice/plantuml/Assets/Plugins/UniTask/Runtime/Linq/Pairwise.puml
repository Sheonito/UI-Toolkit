@startuml
class UniTaskAsyncEnumerable <<static>> <<partial>> {
    + {static} Pairwise(source:IUniTaskAsyncEnumerable<TSource>) : IUniTaskAsyncEnumerable<(TSource, TSource)>
}
class "Pairwise`1"<TSource> <<sealed>> {
    + Pairwise(source:IUniTaskAsyncEnumerable<TSource>)
    + GetAsyncEnumerator(cancellationToken:CancellationToken) : IUniTaskAsyncEnumerator<(TSource, TSource)>
}
class "IUniTaskAsyncEnumerable`1"<T> {
}
class _Pairwise <<sealed>> {
    + _Pairwise(source:IUniTaskAsyncEnumerable<TSource>, cancellationToken:CancellationToken)
    + MoveNextAsync() : UniTask<bool>
    + DisposeAsync() : UniTask
}
class "IUniTaskAsyncEnumerator`1"<T> {
}
"IUniTaskAsyncEnumerable`1" "<(TSource, TSource)>" <|-- "Pairwise`1"
"Pairwise`1" +-- _Pairwise
MoveNextSource <|-- _Pairwise
"IUniTaskAsyncEnumerator`1" "<(TSource, TSource)>" <|-- _Pairwise
@enduml
