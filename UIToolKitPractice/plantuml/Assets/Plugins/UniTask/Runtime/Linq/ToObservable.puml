@startuml
class UniTaskAsyncEnumerable <<static>> <<partial>> {
    + {static} ToObservable(source:IUniTaskAsyncEnumerable<TSource>) : IObservable<TSource>
}
class "ToObservable`1"<T> <<sealed>> {
    + ToObservable(source:IUniTaskAsyncEnumerable<T>)
    + Subscribe(observer:IObserver<T>) : IDisposable
}
class "IObservable`1"<T> {
}
class CancellationTokenDisposable <<sealed>> {
    + Dispose() : void
}
"IObservable`1" "<T>" <|-- "ToObservable`1"
"ToObservable`1" +-- CancellationTokenDisposable
IDisposable <|-- CancellationTokenDisposable
CancellationTokenDisposable --> "Token" CancellationToken
@enduml
